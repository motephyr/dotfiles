
# Path to your oh-my-zsh configuration.
ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
# ZSH_THEME="robbyrussell"
ZSH_THEME="muse"

# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# Set to this to use case-sensitive completion
# CASE_SENSITIVE="true"

# Uncomment this to disable bi-weekly auto-update checks
# DISABLE_AUTO_UPDATE="true"

# Uncomment to change how often before auto-updates occur? (in days)
# export UPDATE_ZSH_DAYS=13

# Uncomment following line if you want to disable colors in ls
# DISABLE_LS_COLORS="true"

# Uncomment following line if you want to disable autosetting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment following line if you want to disable command autocorrection
# DISABLE_CORRECTION="true"

# Uncomment following line if you want red dots to be displayed while waiting for completion
# COMPLETION_WAITING_DOTS="true"

# Uncomment following line if you want to disable marking untracked files under
# VCS as dirty. This makes repository status check for large repositories much,
# much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment following line if you want to  shown in the command execution time stamp 
# in the history command output. The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|
# yyyy-mm-dd
# HIST_STAMPS="mm/dd/yyyy"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(git)

source $ZSH/oh-my-zsh.sh

# User configuration
NPM_PACKAGES="${HOME}/.npm-packages"
NODE_PATH="$NPM_PACKAGES/lib/node_modules:$NODE_PATH"

# export PATH="$PATH:/Users/motephyr/.rvm/bin:
export PATH="$PATH:/usr/local/bin:/usr/local/sbin:/bin:/usr/sbin:/sbin:/usr/bin:$NPM_PACKAGES/bin:/Library/PostgreSQL/9.4/bin/"
# export MANPATH="/usr/local/man:$MANPATH"

# # Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
   export EDITOR='nvim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/dsa_id"
#

# Unset manpath so we can inherit from /etc/manpath via the `manpath`
# command
##unset MANPATH # delete if you already modified MANPATH elsewhere in your config
##MANPATH="$NPM_PACKAGES/share/man:$(manpath)"

##source ~/.nvm/nvm.sh
##export DOCKER_HOST=tcp://localhost:2375
##export PATH="$PATH:/usr/local/Cellar/yarn/1.9.4/bin"
alias vim="nvim"
alias vi="nvim"
alias tig="tig --date-order --all"
alias tmuxinator="ASDF_RUBY_VERSION=2.6.4 tmuxinator"

export PATH="/usr/local/opt/gettext/bin:$PATH"

[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

. $HOME/.asdf/asdf.sh

. $HOME/.asdf/completions/asdf.bash

export GOPATH="$HOME/go"
export PATH="$GOPATH/bin:$PATH"

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
export FZF_DEFAULT_COMMAND='ag --hidden --ignore .git -g ""'
export FZF_DEFAULT_OPTS='--bind ctrl-d:page-down,ctrl-u:page-up'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_CTRL_T_OPTS="--preview-window 'right:60%' --preview 'bat --color=always --style=header,grid --line-range :300 {}'"

#just demo find a file with ag and open in nvim
fag() {
  local file

  file="$(ag -l $@ | fzf -0 -1 --preview 'bat --color=always --style=header,grid --line-range :300 {}'| awk -F: '{print $1}')"

  if [[ -n $file ]]
  then
     nvim $file
  fi
}

#choose mulit file 
mag() {
  if [ ! "$#" -gt 0 ]; then echo "Need a string to search for!"; return 1; fi
  ag -l $1 | fzf -m --preview-window 'right:60%' --preview 'bat --color=always --style=header,grid --line-range :300 {}' 
}

#choose mulit file for change
magr() {
  if [ ! "$#" -gt 0 ]; then echo "Need a string to search for!"; return 1; fi
  ag -l $1 | fzf -m --preview-window 'right:60%' --preview 'bat --color=always --style=header,grid --line-range :300 {}' | tr '\n' '\0' | xargs -0 sed -i '' -e "s/$1/$2/g"
}

#use ag check and change all
agr() {
  ag -0 -l $1 | xargs -0 sed -i '' -e "s/$1/$2/g"
}

export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
